{"version":3,"file":"component---src-pages-about-js-ce99991a507bf66576d9.js","mappings":"uJAqCA,IAlCeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEAG,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,KAAKR,IAKhBK,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCR,GAMLK,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBJ,GACjDG,EAAAA,cAAA,UAAQC,UAAU,iBAAiBF,GACnCC,EAAAA,cAAA,YAAOJ,GACPI,EAAAA,cAAA,UAAQC,UAAU,iBAAgB,YACtBN,EACVK,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,UAAS,SAClBH,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,mBAAkB,oBAG3B,C,yDCrBV,MAAMC,EAAMX,IAAyC,IAADY,EAAAC,EAAAC,EAAA,IAAvC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEf,GAAOF,EAC7C,MAAM,KAAEkB,IAASC,EAAAA,EAAAA,IAAe,aAoB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBV,EAAGM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBV,MAExC,OACEK,EAAAA,cAACgB,EAAAA,eAAc,KACbhB,EAAAA,cAACiB,EAAAA,OAAM,CACLC,eAAgB,CACdT,QAEFd,MAAOA,EACPwB,cAAeJ,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEU,KAAK,cACLC,QAASR,GAEX,CACES,SAAS,WACTD,QAAS1B,GAEX,CACE2B,SAAS,iBACTD,QAASR,GAEX,CACES,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAA0B,QAAjBf,EAAAK,EAAKG,oBAAY,IAAAR,GAAQ,QAARC,EAAjBD,EAAmBiB,cAAM,IAAAhB,OAAR,EAAjBA,EAA2BiB,UAAO,IAE7C,CACEJ,KAAK,gBACLC,QAAS1B,GAEX,CACEyB,KAAK,sBACLC,QAASR,IAEXY,OAAOf,KAEM,EAIvBN,EAAIsB,aAAe,CACjBjB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,gEC/EA,UAXkBf,IAAyB,IAAxB,KAAEkC,EAAI,SAAEjC,GAAUD,EACnC,MAAMmC,EAAYD,EAAKhB,KAAKG,aAAanB,MAEzC,OACEK,EAAAA,cAAC6B,EAAAA,EAAM,CAACnC,SAAUA,EAAUC,MAAOiC,GACjC5B,EAAAA,cAACI,EAAAA,EAAG,CAACT,MAAM,UACXK,EAAAA,cAAA,UACO,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/about.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer className=\"global-footer\">\n        (c) 2021 {title}\n        <div className=\"footer-info\">\n          <Link to=\"/about\">about</Link>\n          <Link to=\"/privacy-policy\">privacy policy</Link>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet, HelmetProvider } from \"react-helmet-async\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              name\n              summary\n              social {\n                github\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <HelmetProvider>\n      <Helmet\n        htmlAttributes={{\n          lang,\n        }}\n        title={title}\n        titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n        meta={[\n          {\n            name: `description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: site.siteMetadata?.social?.twitter || ``,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: metaDescription,\n          },\n        ].concat(meta)}\n        />\n      </HelmetProvider>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst AboutPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"about\" />\n      <p></p>\n    </Layout>\n  )\n}\n\nexport default AboutPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","SEO","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","HelmetProvider","Helmet","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","data","siteTitle","Layout"],"sourceRoot":""}