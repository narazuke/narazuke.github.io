{"version":3,"file":"component---src-pages-tags-js-29942823cd06357bdbb4.js","mappings":"qMA+DA,UApDiB,SAAC,GAAD,IACfA,EADe,EACfA,SADe,IAEfC,KACuBC,EAHR,EAGbC,kBAAqBD,MAEHE,EALL,EAIbC,KACEC,aAAgBF,MALL,OASf,gBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOA,GACjC,gBAAC,EAAAG,eAAD,KACE,gBAAC,EAAAC,OAAD,CAAQJ,MAAOA,KAEjB,2BACE,kCACA,0BACGF,EACEO,MAAK,SAAUC,EAAGC,GACjB,OAAID,EAAEE,WAAaD,EAAEC,YAAoB,EACrCF,EAAEE,WAAaD,EAAEC,WAAmB,EACjC,KAERC,KAAI,SAAAC,GAAG,OACN,sBAAIC,IAAKD,EAAIF,YACX,gBAAC,KAAD,CAAMI,GAAE,QAAUC,GAAAA,CAAUH,EAAII,YAAxB,KACLJ,EAAII,WADP,KACqBJ,EAAIF,WADzB","sources":["webpack://gatsby-starter-blog/./src/pages/tags.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Utilities\nimport kebabCase from \"lodash/kebabCase\"\nimport Layout from \"../components/layout\"\n\n// Components\nimport { Helmet, HelmetProvider } from \"react-helmet-async\"\nimport { Link, graphql } from \"gatsby\"\n\nconst TagsPage = ({\n  location,\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <Layout location={location} title={title}>\n    <HelmetProvider>\n      <Helmet title={title} />\n    </HelmetProvider>\n    <div>\n      <h1>Tags</h1>\n      <ul>\n        {group\n          .sort(function (a, b) {\n            if (a.totalCount > b.totalCount) return -1\n            if (a.totalCount < b.totalCount) return 1\n            return 0\n          })\n          .map(tag => (\n            <li key={tag.totalCount}>\n              <Link to={`/tag/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  </Layout>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          summary\n          social {\n            github\n          }\n        }\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tag) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"names":["location","data","group","allMarkdownRemark","title","site","siteMetadata","HelmetProvider","Helmet","sort","a","b","totalCount","map","tag","key","to","kebabCase","fieldValue"],"sourceRoot":""}