{"version":3,"file":"component---src-pages-using-typescript-tsx-05aa892d9fffbdf10ec6.js","mappings":"wKA6CA,UAhCwDA,IAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACDH,EAAA,OACCI,EAAAA,cAACC,EAAAA,EAAM,CAACC,MAAM,mBAAmBH,SAAUA,GACzCC,EAAAA,cAACG,EAAAA,EAAG,CAACD,MAAM,qBAuBJ,C,+CCLX,IAlCeN,IAAoC,IAAnC,SAAEG,EAAQ,MAAEG,EAAK,SAAEE,GAAUR,EAC3C,MACMS,EAD6B,MAChBN,EAASO,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEAL,EAAAA,cAAA,MAAIQ,UAAU,gBACZR,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,KAAKR,IAKhBF,EAAAA,cAACS,EAAAA,GAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCR,GAMLF,EAAAA,cAAA,OAAKQ,UAAU,iBAAiB,oBAAmBH,GACjDL,EAAAA,cAAA,UAAQQ,UAAU,iBAAiBD,GACnCP,EAAAA,cAAA,YAAOI,GACPJ,EAAAA,cAAA,UAAQQ,UAAU,iBAAgB,YACtBN,EACVF,EAAAA,cAAA,OAAKQ,UAAU,eACbR,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,UAAS,SAClBV,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,mBAAkB,oBAG3B,C,yDCrBV,MAAMP,EAAMP,IAAyC,IAADe,EAAAC,EAAAC,EAAA,IAAvC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEd,GAAON,EAC7C,MAAM,KAAEqB,IAASC,EAAAA,EAAAA,IAAe,aAoB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBV,EAAGM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBT,MAExC,OACEF,EAAAA,cAACsB,EAAAA,eAAc,KACbtB,EAAAA,cAACuB,EAAAA,OAAM,CACLC,eAAgB,CACdT,QAEFb,MAAOA,EACPuB,cAAeJ,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEU,KAAK,cACLC,QAASR,GAEX,CACES,SAAS,WACTD,QAASzB,GAEX,CACE0B,SAAS,iBACTD,QAASR,GAEX,CACES,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAA0B,QAAjBf,EAAAK,EAAKG,oBAAY,IAAAR,GAAQ,QAARC,EAAjBD,EAAmBiB,cAAM,IAAAhB,OAAR,EAAjBA,EAA2BiB,UAAO,IAE7C,CACEJ,KAAK,gBACLC,QAASzB,GAEX,CACEwB,KAAK,sBACLC,QAASR,IAEXY,OAAOf,KAEM,EAIvBb,EAAI6B,aAAe,CACjBjB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <SEO title=\"Using TypeScript\" />\n    {/* <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p> */}\n    {/* <Link to=\"/\">Go back to the homepage</Link> */}\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer className=\"global-footer\">\n        (c) 2021 {title}\n        <div className=\"footer-info\">\n          <Link to=\"/about\">about</Link>\n          <Link to=\"/privacy-policy\">privacy policy</Link>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet, HelmetProvider } from \"react-helmet-async\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              name\n              summary\n              social {\n                github\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <HelmetProvider>\n      <Helmet\n        htmlAttributes={{\n          lang,\n        }}\n        title={title}\n        titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n        meta={[\n          {\n            name: `description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: site.siteMetadata?.social?.twitter || ``,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: metaDescription,\n          },\n        ].concat(meta)}\n        />\n      </HelmetProvider>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"names":["_ref","data","path","location","React","Layout","title","SEO","children","isRootPath","pathname","header","className","Link","to","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","HelmetProvider","Helmet","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"sourceRoot":""}