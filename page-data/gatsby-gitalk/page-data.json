{"componentChunkName":"component---src-templates-blog-post-js","path":"/gatsby-gitalk/","result":{"data":{"site":{"siteMetadata":{"title":"NARAZUKE","author":[{"name":"nozzle","summary":"who lives in gummaken.","social":{"github":"nozzlex3"}},{"name":"konnyaku","summary":"who is known as Siege Sukosuko Samurai.","social":{"github":"wabetarou"}}]}},"markdownRemark":{"id":"da3ab825-fe69-5665-abd2-6747893d8bf6","excerpt":"Gitalk とは Gitalk is a modern comment component based on GitHub Issue and Preact. 引用元：Gitalk | Github Github の issue…","html":"<h3>Gitalk とは</h3>\n<blockquote>\n<p>Gitalk is a modern comment component based on GitHub Issue and Preact.</p>\n</blockquote>\n<p>引用元：<a href=\"https://github.com/gitalk/gitalk\">Gitalk | Github</a></p>\n<p>Github の issue を利用するコメントのコンポーネントである。\n導入することで静的なサイトでもコメント欄が設置できる。</p>\n<p><img src=\"./gitalk_01.jpg\">\n<em>gatsby の記事に設置された Gitalk のコメント</em></p>\n<p><img src=\"./gitalk_02.jpg\">\n<em>Github の issue 上のコメント</em></p>\n<p>Gitalk は Github Application を介して、ブログポストごとに新たな issue を立て、ログインしたアカウントでその issue へ返信することができる。<br>\nGitalk 一連の issue の返信をブログポストへのコメントとして表示する。</p>\n<h3>Gitalk の特徴</h3>\n<ul>\n<li>サーバーレスで軽い</li>\n<li>コメントを Github の issue で管理できる</li>\n<li>Github のアカウントがないとコメントできない</li>\n</ul>\n<p>Github のアカウント必須はデメリットに思えるかもしれないが、自分はメリットだと考えている。<br>\n<strong>理由：Github のアカウントを持っている人は IT リテラシーが高いため。</strong></p>\n<h2>Gatsby に Gitalk を導入</h2>\n<p>画像を見て理解してほしい。</p>\n<h3>Github のプロフィールから settings へ</h3>\n<p><img src=\"./gitalk_03.jpg\"></p>\n<h3>Developer settings を開く</h3>\n<p><img src=\"./gitalk_04.jpg\"></p>\n<h3>OAuth Apps を選んで、Register a new application を選択</h3>\n<p><img src=\"./gitalk_05.jpg\"></p>\n<h3>必要な情報を入力する</h3>\n<p>Application name: なんでもいい<br>\nHomepage URL: ブログの URL<br>\nAuthorization callback URL: ブログの URL(上と同じ)\n<img src=\"./gitalk_06.jpg\"></p>\n<h3>client ID と Client secret を入手する</h3>\n<p>Generate a new client secret を押して Client secret を発行する。\n後で使うのでこのページを残しておくこと。\n<img src=\"./gitalk_07.jpg\"></p>\n<h3>Github Application を準備する</h3>\n<h3>Gatsby 用のプラグインをいれる</h3>\n<p><a href=\"https://github.com/suziwen/gatsby-plugin-gitalk\">Gatsby Plugin Gitalk | Github</a></p>\n<pre><code class=\"language-bash\">yarn add gatsby-plugin-gitalk\n</code></pre>\n<h3>gatsby-config.js に追記する</h3>\n<pre><code class=\"language-javascript:title=gatsby-config.js\">module.exports = {\n    // 他の設定\n    {\n      resolve: \"gatsby-plugin-gitalk\",\n      options: {\n        config: {\n          clientID: [生成したアプリケーションのID],\n          clientSecret: [生成したアプリケーションのsecretClient],\n          repo: [レポジトリ名],\n          owner: [レポジトリのオーナー],\n          admin: [レポジトリのオーナー, レポジトリが組織のものならそのメンバー],\n          pagerDirection: \"first\", // コメントが古い順になる\n          createIssueManually: false,\n          distractionFreeMode: false, // コメント欄にフォーカスした時周囲が暗くならないようにする\n          enableHotKey: true, // ctrl+Enterで送信できるようにする\n          proxy: \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\"\n        },\n      },\n    },\n}\n</code></pre>\n<p>clientID と clientSecret は\"\"で囲む。e.g. <code>\"daa548c3047c9a99d442\"</code><br>\nrepo はレポジトリ名だけでいい。 e.g. <code>repo: \"narazuke.github.io\"</code></p>\n<h3>blog-post.js に追記する</h3>\n<pre><code class=\"language-javascript:title=src/templetes/gatsby-config.js\">import \"@suziwen/gitalk/dist/gitalk.css\"\nimport Gitalk from \"gatsby-plugin-gitalk\"\nconst BlogPostTemplate = ({ data, location }) => {\nconst post = data.markdownRemark\nlet gitalkConfig = {\n    id: post.fields.slug,\n    title: post.frontmatter.title,\n  }\n  return(\n    &#x3C;div>\n        {post.frontmatter.title}\n        &#x3C;Gitalk options={gitalkConfig} />\n    &#x3C;/div>\n  )\n</code></pre>\n<p>参考：<a href=\"https://blog.logrocket.com/4-plugins-to-add-comments-to-your-gatsbyjs-blog/\">4 plugins to add comments to your Gatsby.js blog</a></p>\n<h3>おわり？</h3>\n<p>公式の説明だとこれでできるようになるはずだが、2021 年 2 月時点でこの設定だけでは Gitalk が使用できない。次のトラブルシュートを参照してほしい。</p>\n<h2>トラブルシュート：ログインすると、Error: Request failed with status code 403 と出てしまう</h2>\n<h3>原因</h3>\n<p><code>cors-anywhere.herokuapp.com</code> の利用に 2021 年 1 月末から制約が生まれたため、Gitalk の処理、<code>https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token</code>が動いていないから。</p>\n<p>参考：<a href=\"https://github.com/gitalk/gitalk/issues/429\">在授权 gitalk 后出现 403 错误</a><br>\n参考：<a href=\"https://github.com/Rob--W/cors-anywhere/issues/301\">PSA: Public demo server (cors-anywhere.herokuapp.com) will be very limited by January 2021, 31st</a></p>\n<h3>解説</h3>\n<p>正直あまり分かっていない。現時点での理解を書き留める。<br>\nあるサイトから別のサイトの情報を利用することを crosssite origin resource share と呼び、略して CORS と言う。<br>\nなんでもかんでも別のサイトから利用されては悪用されるリスクがあるので、通常は CORS が制限されている。CORS するにはアクセストークンで 2 つのサイトを紐付ける必要がある。<br>\ncors-anywhere があれば、どのサイトへどこからでも CORS で入手できる。すごい<br>\nこれを使っている cors-anywhere.herokuapp.com は親切な人が動かしてくれてる heroku のアプリで、誰でも無料で使うことができたが、悪用される恐れからこれの利用にも制限がかかった。2021 年 1 月末以降、利用には WEB で一時的に利用制限を解く処理をしなければならなくなった。<br>\nGitalk は 2021 年 2 月現在特にこの事態に対する処理を追加していないため、Gitalk が使えなくなってしまっている人が出ている。</p>\n<h3>対処法</h3>\n<p>cors-anywhere ができる herokuapp.com を自分で用意する。</p>\n<h3>手順</h3>\n<p>heroku のアカウントを作る。\n<a href=\"heroku.com\">Heroku</a><br>\nheroku コマンドを CLI で使えるようにする。\n<a href=\"https://devcenter.heroku.com/articles/heroku-cli\">The Heroku CLI</a><br>\nCLI で heroku にログインする。</p>\n<pre><code class=\"language-bash\">heroku login\n</code></pre>\n<p>ポップアップを開いてメアドとパスワード打って戻ると、CLI でのログインに成功しているはず。</p>\n<p>heroku app を動かす。</p>\n<pre><code class=\"language-bash\">git clone https://github.com/Rob--W/cors-anywhere.git\ncd cors-anywhere/\nnpm install\nheroku create\ngit push heroku master\n</code></pre>\n<p>参考：<a href=\"https://stackoverflow.com/questions/47076743/cors-anywhere-herokuapp-com-not-working-503-what-else-can-i-try\">cors-anywhere.herokuapp.com not working (503). What else can I try? | stack overflow</a></p>\n<p>heroku にブラウザでログインする。\n<img src=\"./gitalk_08.jpg\">\n上の画像のように、アプリケーション名が自動で付与されている。</p>\n<p>これを元に再び gatsby-config.js を書き換える</p>\n<pre><code class=\"language-javascript:title=gatsby-config.js\">module.exports = {\n    // 他の設定\n    {\n      resolve: \"gatsby-plugin-gitalk\",\n      options: {\n        config: {\n          clientID: [生成したアプリケーションのID],\n          clientSecret: [生成したアプリケーションのsecretClient],\n          //\n          // (略)\n          //\n          proxy: \"https://[heroku上で見たアプリケーション名].herokuapp.com/https://github.com/login/oauth/access_token\"\n        },\n      },\n    },\n}\n</code></pre>\n<p>heroku のアプリケーション名は「英単語-英単語-5 桁の数字」である。<br>\n例えば、「readable-code-02400」なら、<code>proxy:\"https://readable-code-02400.herokuapp.com/https://github.com/login/oauth/access_token\"</code>である。</p>\n<h3>ほんとうのおわり</h3>\n<p>これで全ての手順が完成した。成功した人はおめでとう。<br>\nできない人は僕より Gitalk の人に聞いた方が良いと思う。</p>","fields":{"slug":"/gatsby-gitalk/"},"frontmatter":{"title":"GitalkでGatsbyにコメント欄を導入","created":"2021-02-15T16:33","updated":"2021-02-22T20:55","description":"Githubのissueをコメント代わりに使う","tag":["gatsby","gitalk","github"],"author":["nozzle"],"category":"tech"}},"previous":{"fields":{"slug":"/noz20210215/"},"frontmatter":{"title":"日記"}},"next":{"fields":{"slug":"/gitclone-to-mygithub/"},"frontmatter":{"title":"gitで別のリポジトリからファイルをコピーする"}},"relatedPosts":{"totalCount":8,"edges":[{"node":{"fields":{"slug":"/gatsby-math/"},"frontmatter":{"title":"web 上 で tex の数学記法を使う"}}},{"node":{"fields":{"slug":"/gitalk-latest-display/"},"frontmatter":{"title":"gitalkの最新コメントをgatsbyに表示する"}}},{"node":{"fields":{"slug":"/gatsby-embed-link/"},"frontmatter":{"title":"gatsbyにyoutube,twitterのリンクを埋め込む"}}},{"node":{"fields":{"slug":"/gatsby-gitalk/"},"frontmatter":{"title":"GitalkでGatsbyにコメント欄を導入"}}},{"node":{"fields":{"slug":"/gatsby-markdown-image-decoration/"},"frontmatter":{"title":"gatsbyの特定のimgにCSSを適用"}}},{"node":{"fields":{"slug":"/gatsby-image/"},"frontmatter":{"title":"gatsbyのimageについて"}}},{"node":{"fields":{"slug":"/posh-git-settings/"},"frontmatter":{"title":"gitのブランチ名をPowerShellで表示する"}}},{"node":{"fields":{"slug":"/gatsby-environment-settings/"},"frontmatter":{"title":"gatsby環境設定"}}}]}},"pageContext":{"id":"da3ab825-fe69-5665-abd2-6747893d8bf6","previousPostId":"2a5a6bc3-b74a-5ab1-a466-823152b14327","nextPostId":"9330956f-4f54-5831-9017-9827ba4019c6","category":"tech","tagList":["gatsby","gitalk","github"]}},"staticQueryHashes":["3284037645","500847697"]}