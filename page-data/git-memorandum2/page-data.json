{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-memorandum2/","result":{"data":{"site":{"siteMetadata":{"title":"NARAZUKE","author":[{"name":"nozzle","summary":"who lives in gummaken.","social":{"github":"nozzlex3"}},{"name":"konnyaku","summary":"who is known as Siege Sukosuko Samurai.","social":{"github":"wabetarou"}}]}},"markdownRemark":{"id":"30e0b49a-c2d9-5f11-a114-685d267e18e2","excerpt":"コマンド gitの管理対象から特定のファイルを除く に追加しただけでは、gitの管理対象からは外れないため、以下のコマンドでキャッシュを削除する必要がある。\nを付けないと、キャッシュだけでなくファイルごと削除されてしまうため注意が必要。 追跡を維持したままファイル名やパスを変更する コミットを取り消す 備考 reset…","html":"<h2>コマンド</h2>\n<h3>gitの管理対象から特定のファイルを除く</h3>\n<p><code class=\"language-text\">.gitignore</code>に追加しただけでは、gitの管理対象からは外れないため、以下のコマンドでキャッシュを削除する必要がある。\n<code class=\"language-text\">--cached</code>を付けないと、キャッシュだけでなくファイルごと削除されてしまうため注意が必要。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ファイル指定してキャッシュ削除  </span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">--cached</span> hoge.txt\n\n<span class=\"token comment\"># ディレクトリをj指定してキャッシュ削除  </span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-r</span> <span class=\"token parameter variable\">--cached</span> hoge/</code></pre></div>\n<h3>追跡を維持したままファイル名やパスを変更する</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># \"foo.py\"というプログラムの名前を\"bar.py\"に変更</span>\n<span class=\"token function\">git</span> <span class=\"token function\">mv</span> foo.py bar.py\n\n<span class=\"token comment\"># \"images\"というディレクトリを\"assets\"に変更</span>\n<span class=\"token function\">git</span> <span class=\"token function\">mv</span> images/ assets/</code></pre></div>\n<h3>コミットを取り消す</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// 直前のコミット操作を取り消す\n<span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--soft</span> HEAD^</code></pre></div>\n<h4>備考 resetとrevert</h4>\n<table>\n<thead>\n<tr>\n<th>コマンド</th>\n<th>機能</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reset</td>\n<td>取り消しても記録に残らない</td>\n<td>個人開発に向いている</td>\n</tr>\n<tr>\n<td>revert</td>\n<td>取り消したことが記録に残る</td>\n<td>グループのプロジェクトに向いている</td>\n</tr>\n</tbody>\n</table>\n<h2>コミット</h2>\n<h3>コミットメッセージの極意</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;emoji> &lt;prefix>(&lt;scope>): &lt;subject>\n&lt;BLANK LINE>\n&lt;body>\n&lt;BLANK LINE>\n&lt;footer></code></pre></div>\n<h3>例</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">🐛 fix(src): 入力に負の値が入ると動作が止まるバグを修正\n\n入力が負のとき回数をカウントできないため、結果として動作が終了する。\n実行前に値をチェックする機能を追加した。\n入力が負の場合、実行がキャンセルされ、エラーメッセージダイアログが表示される。</code></pre></div>\n<h4>[[git備忘録#絵文字|絵文字(emoji)]]</h4>\n<p>絵文字があると視覚的にわかりやすく華やかになる</p>\n<h4>[[git備忘録#プレフィクス|プレフィクス(prefix)]]</h4>\n<p>プレフィクス</p>\n<h4>scope</h4>\n<p>変更が及ぶスコープ</p>\n<h4>subjectj</h4>\n<p>命令法で現在形で書く。句読点を<strong>含めない</strong>。最初を大文字にしない。</p>\n<h3>body</h3>\n<p>命令法で現在形で書く。変更の動機を必ず含め、過去の仕様と対比させる。</p>\n<h4>footer</h4>\n<p>BREAKING CHANGEがあれば、ここに内容を付記する。なければないでよし。</p>\n<h2>絵文字</h2>\n<p>コミットメッセージのプレフィクスの前に絵文字を置くと視覚的に理解しやすくなる。\ne.g. <code class=\"language-text\">✨ feat: 新機能追加</code>  <code class=\"language-text\">🐛 fix: バグ修正</code></p>\n<table>\n<thead>\n<tr>\n<th>絵文字</th>\n<th>文字コード</th>\n<th>prefix</th>\n<th>意味</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>🎉</td>\n<td>:tada:</td>\n<td>feat</td>\n<td>初回コミット・大きな機能追加</td>\n</tr>\n<tr>\n<td>✨</td>\n<td>:sparkles:</td>\n<td>feat</td>\n<td>新しい機能追加</td>\n</tr>\n<tr>\n<td>🔒</td>\n<td>:lock:</td>\n<td>feat</td>\n<td>セキュリティ関連の改善</td>\n</tr>\n<tr>\n<td>🐛</td>\n<td>:bug:</td>\n<td>fix</td>\n<td>バグ修正</td>\n</tr>\n<tr>\n<td>📝</td>\n<td>:memo:</td>\n<td>docs</td>\n<td>ドキュメント修正</td>\n</tr>\n<tr>\n<td>👕</td>\n<td>:shirt:</td>\n<td>style</td>\n<td>Lintエラーの修正やコードスタイルの変更</td>\n</tr>\n<tr>\n<td>🎨</td>\n<td>:art:</td>\n<td>style</td>\n<td>UIやstyleの変更</td>\n</tr>\n<tr>\n<td>🔨</td>\n<td>:hammer:</td>\n<td>refactor</td>\n<td>リファクタリング</td>\n</tr>\n<tr>\n<td>🔥</td>\n<td>:fire:</td>\n<td>refactor</td>\n<td>不要な機能・使われなくなった機能の削除</td>\n</tr>\n<tr>\n<td>🐎</td>\n<td>:race_horse:</td>\n<td>perf</td>\n<td>効率改善</td>\n</tr>\n<tr>\n<td>✅</td>\n<td>:white_check_mark:</td>\n<td>test</td>\n<td>テストやCIの修正・改善</td>\n</tr>\n<tr>\n<td>⬆️</td>\n<td>:arrow_up:</td>\n<td>chore</td>\n<td>依存パッケージなどのアップデート</td>\n</tr>\n</tbody>\n</table>\n<p>参考：<a href=\"https://suwaru.tokyo/%E3%80%90%E5%BF%85%E9%A0%88%E3%80%91git%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9%E3%83%BB%E4%BD%9C%E6%B3%95%E3%80%90prefix-emoji%E3%80%91/\">【必須】Gitコミットの書き方・作法【prefix/emoji】| suwaru blog</a>\n参考：<a href=\"https://crieit.net/posts/Git\">Gitのコミットメッセージに絵文字付きプレフィックスを適用する | crient</a>\n参考：<a href=\"https://gitmoji.dev\">gitmoji</a>\n参考：<a href=\"https://gist.github.com/parmentf/035de27d6ed1dce0b36a\">GitCommitEmoji.md | Github gist</a></p>\n<h3>プレフィクス</h3>\n<p>コミットメッセージにプレフィクスをつけると後で見やすい。</p>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>意味</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>feat</strong></td>\n<td>新機能の追加</td>\n</tr>\n<tr>\n<td><strong>fix</strong></td>\n<td>バグや不具合の修正</td>\n</tr>\n<tr>\n<td><strong>docs</strong></td>\n<td>ドキュメント類の追加・変更・秋雨生</td>\n</tr>\n<tr>\n<td><strong>style</strong></td>\n<td>コードの振舞いに変化を与えない可読性の変更 (空白, セミコロン など)</td>\n</tr>\n<tr>\n<td><strong>refactor</strong></td>\n<td>ソースコードの可読性を向上</td>\n</tr>\n<tr>\n<td><strong>perf</strong></td>\n<td>パフォーマンスを向上</td>\n</tr>\n<tr>\n<td><strong>test</strong></td>\n<td>テストコードの追加・修正</td>\n</tr>\n<tr>\n<td><strong>chore</strong></td>\n<td>自動生成ツールによるファイルの変更</td>\n</tr>\n</tbody>\n</table>\n<p>参考：<a href=\"https://crieit.net/posts/Git\">Gitのコミットメッセージに絵文字付きプレフィックスを適用する | crient</a>\n参考：<a href=\"https://qiita.com/numanomanu/items/45dd285b286a1f7280ed\">【今日からできる】コミットメッセージに 「プレフィックス」 をつけるだけで、開発効率が上がった話 | Qiita</a>\n参考：<a href=\"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#type\">Developing AngularJS | Github</a></p>\n<h4>e.g.</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fix($compile): couple of unit tests for IE9\n\n\nOlder IEs serialize html uppercased, but IE9 does not...\nWould be better to expect case insensitive, unfortunately jasmine does\nnot allow to user regexps for throw expectations.\n\nCloses #392\nBreaks foo.bar api, foo.baz should be used instead</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">style($location): add couple of missing semi colons</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docs(guide) : updated fixed docs from Google Docs\n\nCouple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace</code></pre></div>\n<p>引用：<a href=\"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y\">AngularJS Git Commit Message Conventions | Google Docs</a></p>\n<h3>コミットメッセージテンプレート</h3>\n<h4>テンプレートを登録する</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># グローバルで登録</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> commit.template /path/to/.commit_template\n<span class=\"token comment\"># 現在のディレクトリだけで登録</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--local</span> commit.template /path/to/.commit_template</code></pre></div>\n<h4>マイテンプレート</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># ==== emoji ====\n# | 🎉     | :tada:             | feat     | 初回コミット・大きな機能追加             |\n# | ✨     | :sparkles:         | feat     | 新しい機能追加                           |\n# | 🔒     | :lock:             | feat     | セキュリティ関連の改善                   |\n# | 🐛     | :bug:              | fix      | バグ修正                                 |\n# | 📝     | :memo:             | docs     | ドキュメント修正                         |\n# | 👕     | :shirt:            | style    | Lintエラーの修正やコードスタイルの変更   |\n# | 🎨     | :art:              | style    | UIやstyleの変更                          |\n# | ♻️     | :recycle:          | refactor | リファクタリング                         |\n# | 🔥     | :fire:             | refactor | 不要な機能・使われなくなった機能の削除   |\n# | 🐎     | :race_horse:       | perf     | 効率改善                                 |\n# | ✅     | :white_check_mark: | test     | テストやCIの修正・改善                   |\n# | ⬆️     | :arrow_up:         | chore    | 依存パッケージなどのアップデート         | \n\n# ==== prefix ====\n# | feat       | 新機能の追加                                                       |\n# | fix        | バグや不具合の修正                                                 |\n# | docs       | ドキュメント類の追加・変更・秋雨生                                 |\n# | style      | コードの振舞いに変化を与えない可読性の変更 (空白, セミコロン など) |\n# | refactor   | ソースコードの可読性を向上                                         |\n# | perf       | パフォーマンスを向上                                               |\n# | test       | テストコードの追加・修正                                           |\n# | chore      | 自動生成ツールによるファイルの変更                                 | </code></pre></div>","fields":{"slug":"/git-memorandum2/"},"frontmatter":{"title":"git備忘録2","created":"2022-11-12T23:31","updated":"2022-11-30T21:47","description":"君の忘れがちなあのコマンドが載っているかも！？ｖ","tag":["git"],"author":["nozzle"],"category":"tech"}},"previous":{"fields":{"slug":"/how-to-use-adsf/"},"frontmatter":{"title":"asdfの使い方"}},"next":{"fields":{"slug":"/mac-distinguish-control-command/"},"frontmatter":{"title":"Macのショートカットキーで用いられるcontrolとcommandの使い分け"}},"relatedPosts":{"totalCount":6,"edges":[{"node":{"fields":{"slug":"/git-editor-vscode/"},"frontmatter":{"title":"gitのエディターをVScodeにすると失敗する"}}},{"node":{"fields":{"slug":"/git-mv-files/"},"frontmatter":{"title":"gitの追跡対象にしたままで大量のファイルを移動・名称変更する"}}},{"node":{"fields":{"slug":"/git-memorandum2/"},"frontmatter":{"title":"git備忘録2"}}},{"node":{"fields":{"slug":"/gitclone-to-mygithub/"},"frontmatter":{"title":"gitで別のリポジトリからファイルをコピーする"}}},{"node":{"fields":{"slug":"/posh-git-settings/"},"frontmatter":{"title":"gitのブランチ名をPowerShellで表示する"}}},{"node":{"fields":{"slug":"/git-memorandum/"},"frontmatter":{"title":"git備忘録"}}}]}},"pageContext":{"id":"30e0b49a-c2d9-5f11-a114-685d267e18e2","previousPostId":"78d0ca9f-cf08-5ffa-9397-0971990a589d","nextPostId":"edb1ec79-e80c-5759-9894-43e1d4a2943c","category":"tech","tagList":["git"]}},"staticQueryHashes":["3284037645","500847697"]}