{"componentChunkName":"component---src-templates-blog-post-js","path":"/gitalk-latest-display/","result":{"data":{"site":{"siteMetadata":{"title":"NARAZUKE","author":[{"name":"nozzle","summary":"who lives in gummaken.","social":{"github":"nozzlex3"}},{"name":"konnyaku","summary":"who is known as Siege Sukosuko Samurai.","social":{"github":"wabetarou"}}]}},"markdownRemark":{"id":"a9676632-30c7-5c2b-9673-541bec7f1636","excerpt":"仕様 deploy する時に、API で最新のコメントを取得して生成してくれる機能です。 コメントが投稿される度に更新されるわけではないです。 準備 Github GraphQL API 知る GitHub chose GraphQL for our API v4 because it offers…","html":"<h2>仕様</h2>\n<p>deploy する時に、API で最新のコメントを取得して生成してくれる機能です。<br>\nコメントが投稿される度に更新されるわけではないです。</p>\n<h2>準備</h2>\n<h3>Github GraphQL API</h3>\n<h4>知る</h4>\n<blockquote>\n<p>GitHub chose GraphQL for our API v4 because it offers significantly more flexibility for our integrators. The ability to define precisely the data you want—and only the data you want—is a powerful advantage over the REST API v3 endpoints. GraphQL lets you replace multiple REST requests with a single call to fetch the data you specify.</p>\n</blockquote>\n<p>引用元：<a href=\"https://docs.github.com/en/graphql/overview/about-the-graphql-api#overview\">About the GraphQL API | Github Docs</a></p>\n<p>Github は API の方式を REST から GraphQL に移行した。<br>\nREST API では必要ないデータもまとめて取得する必要がある一方、GraphQL はクライアント側が必要なデータを指定して取得できるため効率的。</p>\n<h4>使ってみる</h4>\n<p><strong>知ってる人は飛ばしてください。</strong><br>\n使ってみるのが一番分かりやすい。<br>\nGraphiQL というグラフィカルなインターフェースを使って API でデータを取得するようすを見てみよう。<br>\n試しに自分のリポジトリとその URL を取得する。</p>\n<p><a href=\"https://docs.github.com/en/graphql/overview/explorer\">Explorer | Github Docs</a></p>\n<p><img src=\"./gitalk-latest-display-01.jpg\"><br>\n<em>explorer の画面</em></p>\n<p>直接クエリを打ち込んでもいいのですが、データの型が分かりやすいし簡単なので explorer を使います。チェックボックスをクリックするたびに、要求するクエリが作られていくので便利です。</p>\n<ol>\n<li>緑色の<code>Sign in with Github</code>でログインして Explorer をクリックして数秒待つ。</li>\n<li>Explorer で<code>▸user</code>を見つけてクリック。</li>\n<li>紫色の<code>login</code>のチェックボックスをクリック。ダブルクォーテーションの間にログイン名を入力。</li>\n<li><code>▸user</code>下の<code>▸repositories</code>を見つけてクリック。</li>\n<li>紫色の<code>last</code>のチェックボックスをクリック。</li>\n<li><code>▸nodes</code>を見つけてクリック。</li>\n<li><code>name</code>と<code>url</code>のチェックボックスを見つけてクリック。</li>\n</ol>\n<p>これでクエリが完成です。\n表示が上のようになってるはずです。</p>\n<p><img src=\"./gitalk-latest-display-02.jpg\"><br>\n<em>クエリの表示</em></p>\n<ol start=\"8\">\n<li>中央上の再生ボタンをクリック。○ の中に ▶ が入ってるボタンです。</li>\n<li>リポジトリ一覧が右に表示されます。</li>\n</ol>\n<p><img src=\"./gitalk-latest-display-03.jpg\"><br>\n<em>応答</em></p>\n<p>確認できたと思います。</p>\n<p>Gitalk ではリポジトリの issue のコメントを使っているので、この API でリポジトリのコメントを取得できるようなクエリを書きましょう。</p>\n<p>自分が書いたものも載せておきます。\nnarazuke.github.io にある最新 100 件の issue にある、最新 1 件のコメントとその日時とユーザー情報を取得します。</p>\n<pre><code class=\"language-query\">query {\n    organization(login: \"narazuke\") {\n        repository(name: \"narazuke.github.io\") {\n            issues(orderBy: {field:UPDATED_AT, direction: DESC}, last: 100) {\n                nodes {\n                    comments(last: 1, orderBy: {field: UPDATED_AT, direction: ASC}) {\n                        totalCount\n                        nodes {\n                            body\n                            author {\n                                avatarUrl(size: 10)\n                                login\n                                url\n                            }\n                            updatedAt\n                        }\n                    }\n                body\n                title\n                }\n            }\n        }\n    }\n}\n</code></pre>\n<h2>gatsby で Github GraphQL API を使えるようにする</h2>\n<h3>access token を取得する</h3>\n<ol>\n<li>Github の settings から Developer settings を開く</li>\n<li>Personal access tokens を開いて Generate new token をクリックする。\n<img src=\"./gitalk-latest-display-04.jpg\"></li>\n<li>repo だけチェックして Generate token をクリックする。</li>\n<li>token が表示されるのでコピーする。</li>\n</ol>\n<h3>plugin を入れる</h3>\n<ol>\n<li>\n<p><code>gatsby-source-github-api</code>を導入する</p>\n<pre><code class=\"language-bash\">yarn add gatsby-source-github-api\n</code></pre>\n</li>\n<li>\n<p>gatsby-config.js に追記する</p>\n<pre><code class=\"language-js:title=gatsby-config.js\">module.exports = {\nplugins: [\n{\n   resolve: `gatsby-source-github-api`,\n   options: {\n   url: \"https://api.github.com/graphql\",\n   token: [Developer settingsで取得したトークン],\n   variables: {},\n   graphQLQuery: `query {\n     organization(login: \"narazuke\") {\n       repository(name: \"narazuke.github.io\") {\n         issues(orderBy: {field:UPDATED_AT, direction: DESC}, last: 100) {\n           nodes {\n              comments(last: 1, orderBy: {field: UPDATED_AT, direction: ASC}) {\n               totalCount\n               nodes {\n                 body\n                 author {\n                   avatarUrl(size: 10)\n                   login\n                   url\n                 }\n                 updatedAt\n               }\n             }\n             body\n             title\n           }\n         }\n       }\n     }\n   }`,\n },\n},\n],\n}\n</code></pre>\n</li>\n</ol>\n<h3>localhost の GraphiQL を確認する</h3>\n<p><img src=\"./gitalk-latest-display-06.jpg\"></p>\n<p>githubData と allGithubData の型が出てきたら成功です。あとは graphQL を使ってコメントを表示するプログラムを書きましょう。</p>\n<p>奈良漬で使ってるコードを貼っておきます。<br>\n<a href=\"https://github.com/narazuke/narazuke.github.io/blob/develop/src/components/latest-comments.js\">https://github.com/narazuke/narazuke.github.io/blob/develop/src/components/latest-comments.js</a></p>","fields":{"slug":"/gitalk-latest-display/"},"frontmatter":{"title":"gitalkの最新コメントをgatsbyに表示する","created":"2021-02-22T10:59","updated":"2021-02-22T18:20","description":"gatsby-source-github-apiを使います","tag":["gatsby","gitalk","github","graphql"],"author":["nozzle"],"category":"tech"}},"previous":{"fields":{"slug":"/noz20210222/"},"frontmatter":{"title":"日記"}},"next":{"fields":{"slug":"/noz20210223/"},"frontmatter":{"title":"日記"}},"relatedPosts":{"totalCount":8,"edges":[{"node":{"fields":{"slug":"/gatsby-math/"},"frontmatter":{"title":"web 上 で tex の数学記法を使う"}}},{"node":{"fields":{"slug":"/gitalk-latest-display/"},"frontmatter":{"title":"gitalkの最新コメントをgatsbyに表示する"}}},{"node":{"fields":{"slug":"/gatsby-embed-link/"},"frontmatter":{"title":"gatsbyにyoutube,twitterのリンクを埋め込む"}}},{"node":{"fields":{"slug":"/gatsby-gitalk/"},"frontmatter":{"title":"GitalkでGatsbyにコメント欄を導入"}}},{"node":{"fields":{"slug":"/gatsby-markdown-image-decoration/"},"frontmatter":{"title":"gatsbyの特定のimgにCSSを適用"}}},{"node":{"fields":{"slug":"/gatsby-image/"},"frontmatter":{"title":"gatsbyのimageについて"}}},{"node":{"fields":{"slug":"/posh-git-settings/"},"frontmatter":{"title":"gitのブランチ名をPowerShellで表示する"}}},{"node":{"fields":{"slug":"/gatsby-environment-settings/"},"frontmatter":{"title":"gatsby環境設定"}}}]}},"pageContext":{"id":"a9676632-30c7-5c2b-9673-541bec7f1636","previousPostId":"0e286c82-059c-594d-9411-166495fd57a2","nextPostId":"7e55bb4d-0d68-509b-8ad4-a053a39a8a7d","category":"tech","tagList":["gatsby","gitalk","github","graphql"]}},"staticQueryHashes":["3284037645","500847697"]}