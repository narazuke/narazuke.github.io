{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-mv-files/","result":{"data":{"site":{"siteMetadata":{"title":"NARAZUKE","author":[{"name":"nozzle","summary":"who lives in gummaken.","social":{"github":"nozzlex3"}},{"name":"konnyaku","summary":"who is known as Siege Sukosuko Samurai.","social":{"github":"wabetarou"}}]}},"markdownRemark":{"id":"11ab7b04-ed91-598b-9a7f-da1b8a2957c7","excerpt":"結論 なんてやめてで全部移動させてよい。\nで変更されたファイルをstagedにすれば、ちゃんと名称変更扱いになる。\n(ファイル削除と新規ファイル追加とはならない) 冗長な解説 git mvを使う (非推奨) git mvとは gitの追跡対象にしたままファイルの移動・名称変更ができるコマンド。 使い方 git…","html":"<h2>結論</h2>\n<p><code class=\"language-text\">git mv</code>なんてやめて<code class=\"language-text\">mv</code>で全部移動させてよい。\n<code class=\"language-text\">git add -A</code>で変更されたファイルをstagedにすれば、ちゃんと名称変更扱いになる。\n(ファイル削除と新規ファイル追加とはならない)</p>\n<h2>冗長な解説</h2>\n<h3>git mvを使う (非推奨)</h3>\n<h4>git mvとは</h4>\n<p>gitの追跡対象にしたままファイルの移動・名称変更ができるコマンド。</p>\n<h4>使い方</h4>\n<p>gitの追跡対象に”foo.txt”と”hoge.txt”があるとする。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">git</span> ls-files\nfoo.txt\nhoge.txt</code></pre></div>\n<p>今、“foo.txt”を”bar.txt”に名称を変更したい。\nしかし、<code class=\"language-text\">mv foo.txt bar.txt</code>とすると、foo.txtの削除とbar.txtの新規追加となってしまう。\n(これらをstagedにすると名称変更扱いになるが、[[#mvを使う (推奨) |後述]]する。)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">mv</span> foo.txt bar.txt\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> status\nOn branch master\nChanges to be committed:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git restore --staged &lt;file>...\"</span> to unstage<span class=\"token punctuation\">)</span>\n        deleted:    foo.txt\n\nUntracked files:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to include <span class=\"token keyword\">in</span> what will be committed<span class=\"token punctuation\">)</span>\n        bar.txt</code></pre></div>\n<p>そこで、<code class=\"language-text\">git mv</code>を使うと追跡対象を保ったままファイル名を変更できる。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">mv</span> foo.txt bar.txt\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> status\nOn branch master\nChanges to be committed:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git restore --staged &lt;file>...\"</span> to unstage<span class=\"token punctuation\">)</span>\n        renamed:    foo.txt -<span class=\"token operator\">></span> bar.txt</code></pre></div>\n<h4>git mvの欠点</h4>\n<p><code class=\"language-text\">git mv</code>ではワイルドカードが使えない致命的な欠点がある。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">git</span> ls-files\nfoo.txt\nhoge.txt</code></pre></div>\n<p>このような状態でカレントディレクトリの全てのtxtファイルを”dir1”というディレクトリに移動させたい。\n先述のとおり<code class=\"language-text\">git mv</code>は<code class=\"language-text\">*</code> (アスタリスク)が使えないので以下のコマンドは失敗する。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">## 以下のコマンドは失敗する</span>\n<span class=\"token operator\">></span> <span class=\"token function\">mkdir</span> dir1\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> <span class=\"token function\">mv</span> *.txt ./dir1/\nfatal: bad source, <span class=\"token assign-left variable\">source</span><span class=\"token operator\">=</span>*.txt, <span class=\"token assign-left variable\">destination</span><span class=\"token operator\">=</span>dir1/*.txt</code></pre></div>\n<p>そのため、<code class=\"language-text\">git mv</code>で移動する場合、移動したいファイルの数だけコマンドを実行しなければならない。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">mkdir</span> dir1\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> <span class=\"token function\">mv</span> foo.txt ./dir1/foo.txt\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> <span class=\"token function\">mv</span> hoge.txt ./dir1/hoge.txt</code></pre></div>\n<p>これは、移動したいファイルが大量にあるときに困る。\nforループでスクリプトを書くこともできるが、面倒だ。</p>\n<h3>mvを使う (推奨)</h3>\n<h3>mvでワイルドカードを使って移動する</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">git</span> ls-files\nfoo.txt\nhoge.txt</code></pre></div>\n<p>先程と同じ状況でカレントディレクトリの全てのtxtファイルを”dir1”というディレクトリに移動させたい。\n<code class=\"language-text\">mv</code>は<code class=\"language-text\">*</code>を使って、複数のファイルを指定できるので以下のコマンドで移動できる。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">mkdir</span> dir1\n<span class=\"token operator\">></span> <span class=\"token function\">mv</span> *.txt dir1/\n<span class=\"token operator\">></span> <span class=\"token function\">ls</span> dir1\nfoo.txt hoge.txt</code></pre></div>\n<p>この操作は、これらのファイルがunstagedな状態では、新規ファイルの追加と既存ファイルの削除として扱われてしまう。\nそこで<code class=\"language-text\">git add -A</code>を実行して、変更があったファイルを全てstagedの状態にすると、きちんと名称変更として扱われる。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">git</span> status\nOn branch master\nChanges not staged <span class=\"token keyword\">for</span> commit:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add/rm &lt;file>...\"</span> to update what will be committed<span class=\"token punctuation\">)</span>        \n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git restore &lt;file>...\"</span> to discard changes <span class=\"token keyword\">in</span> working directory<span class=\"token punctuation\">)</span>\n        deleted:    foo.txt\n        deleted:    hoge.txt\n\nUntracked files:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to include <span class=\"token keyword\">in</span> what will be committed<span class=\"token punctuation\">)</span>\n        dir1/\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-A</span>\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> status\nOn branch master\nChanges to be committed:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git restore --staged &lt;file>...\"</span> to unstage<span class=\"token punctuation\">)</span>\n        renamed:    foo.txt -<span class=\"token operator\">></span> dir1/foo.txt\n        renamed:    hoge.txt -<span class=\"token operator\">></span> dir1/hoge.txt</code></pre></div>\n<p>参考：<a href=\"https://qiita.com/zonkyy/items/7705844c5e255b8fa3ae\">Git で管理しているファイルのリネームを git mv でなく mv してしまったときにどうなるのか調べてみた | Qiita</a>\n参考：<a href=\"https://www.nullpo.io/2021/06/04/git-renamed/\">Gitで追跡を維持してファイル名を変更する | nullpo.io</a></p>","fields":{"slug":"/git-mv-files/"},"frontmatter":{"title":"gitの追跡対象にしたままで大量のファイルを移動・名称変更する","created":"2022-11-13T09:09","updated":"2022-11-30T21:47","description":"git mvは使うな！","tag":["git"],"author":["nozzle"],"category":"tech"}},"previous":{"fields":{"slug":"/mac-distinguish-control-command/"},"frontmatter":{"title":"Macのショートカットキーで用いられるcontrolとcommandの使い分け"}},"next":{"fields":{"slug":"/git-editor-vscode/"},"frontmatter":{"title":"gitのエディターをVScodeにすると失敗する"}},"relatedPosts":{"totalCount":6,"edges":[{"node":{"fields":{"slug":"/git-editor-vscode/"},"frontmatter":{"title":"gitのエディターをVScodeにすると失敗する"}}},{"node":{"fields":{"slug":"/git-mv-files/"},"frontmatter":{"title":"gitの追跡対象にしたままで大量のファイルを移動・名称変更する"}}},{"node":{"fields":{"slug":"/git-memorandum2/"},"frontmatter":{"title":"git備忘録2"}}},{"node":{"fields":{"slug":"/gitclone-to-mygithub/"},"frontmatter":{"title":"gitで別のリポジトリからファイルをコピーする"}}},{"node":{"fields":{"slug":"/posh-git-settings/"},"frontmatter":{"title":"gitのブランチ名をPowerShellで表示する"}}},{"node":{"fields":{"slug":"/git-memorandum/"},"frontmatter":{"title":"git備忘録"}}}]}},"pageContext":{"id":"11ab7b04-ed91-598b-9a7f-da1b8a2957c7","previousPostId":"edb1ec79-e80c-5759-9894-43e1d4a2943c","nextPostId":"47f9ce84-5d06-5c1f-98a1-27ad5de0f316","category":"tech","tagList":["git"]}},"staticQueryHashes":["3284037645","500847697"]}