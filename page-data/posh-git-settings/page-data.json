{"componentChunkName":"component---src-templates-blog-post-js","path":"/posh-git-settings/","result":{"data":{"site":{"siteMetadata":{"title":"NARAZUKE","author":[{"name":"nozzle","summary":"who lives in gummaken.","social":{"github":"nozzlex3"}},{"name":"konnyaku","summary":"who is known as Siege Sukosuko Samurai.","social":{"github":"wabetarou"}}]}},"markdownRemark":{"id":"ba3b0a67-1732-5227-a2ad-6988a350c5fc","excerpt":"経緯 「気づいたら develop ブランチで作業してたわ、すまん」 「俺もだったわ」 posh-git とは posh-git is a PowerShell module that integrates Git and PowerShell by providing Git status summary…","html":"<h2>経緯</h2>\n<p>「気づいたら develop ブランチで作業してたわ、すまん」<br>\n「俺もだったわ」</p>\n<h2>posh-git とは</h2>\n<blockquote>\n<p>posh-git is a PowerShell module that integrates Git and PowerShell by providing Git status summary information that can be displayed in the PowerShell prompt</p>\n</blockquote>\n<p>引用元:<a href=\"https://github.com/dahlbyk/posh-git\">https://github.com/dahlbyk/posh-git</a></p>\n<p>posh-git とは、PowerShell に git のステータスを出せるモジュールである。ブランチ名が表示されるので、ヒューマンエラーの削減に期待できる。ブランチ名やアンステージドなファイルを tab キー補完してくれる機能も搭載。git ユーザ垂涎のモジュールだ。<br>\n私の実行環境は PowerShell 7.1.1。 posh-git は 6.x とあったが問題なく導入できた。</p>\n<h2>PowerShell のプロファイルの場所</h2>\n<pre><code class=\"language-PowerShell\">echo $profile\n</code></pre>\n<p><code>D:\\Documents\\PowerShell\\Microsoft\\PowerShell_profile.ps1</code>だった。君はどうだ？</p>\n<h2>Git のパス確認</h2>\n<pre><code class=\"language-PowerShell\">gcm git\n</code></pre>\n<h2>posh-git を導入</h2>\n<p>README に従って、<code>~/git</code>の中に入れることにしました。</p>\n<pre><code class=\"language-bash\">mkdir git\ncd ~/git\ngit clone git@github.com:dahlbyk/posh-git.git   # posh-gitをgit clone\n</code></pre>\n<h2>プロファイルに追記する</h2>\n<pre><code class=\"language-PowerShell\">code $profile       # VScodeでMicrosoft.PowerShell.ps1を編集する\n</code></pre>\n<p>vim でも emac でも nano でも良いよ。\nエディタで以下の内容を追記する。</p>\n<pre><code class=\"language-PowerShell\">Import-Module '~/git/posh-git/src/posh-git.psd1'        # posh-gitを読み込ませる\n$GitPromptSettings.DefaultPromptBeforeSuffix.Text = '`n'    # ブランチ名の後、改行する\n</code></pre>\n<h2>プロファイルを読み込む</h2>\n<pre><code class=\"language-PowerShell\">. $profile\n</code></pre>\n<p><img src=\"powershell_screenshot_01.png\" alt=\"powershell_screenshot_01\"><br>\n表示がこうなってたら成功</p>\n<h2>表示の意味</h2>\n<h3>ローカル</h3>\n<p>解説を見るより、手を動かして仕様を確認したほうが断然理解が早い。<br>\n空っぽのディレクトリに<code>git init</code>して適当なファイルを 3 つ作ると、以下のような表示が出る。\n<img src=\"git_status_display_01.png\" alt=\"git_status_display_01.png\"></p>\n<p>作成したファイルのうち、一つを<code>git add</code>してやると、以下のような表示になる。\n<img src=\"git_status_display_02.png\" alt=\"git_status_display_02.png\"></p>\n<p>残り 2 つも<code>git init</code>すると、以下のような表示に変わる。\n<img src=\"git_status_display_03.png\" alt=\"git_status_display_03.png\"></p>\n<h3>リモート</h3>\n<p>github でリポジトリを作る。</p>\n<pre><code class=\"language-PowerShell\">git remote add origin git@github.com:nozzlex3/posh-git_test.git     # リモートリポジトリを指定し、originと名付ける\ngit push -u origin master   # プッシュ先をoriginのmasterブランチ\n</code></pre>\n<p>表示がこうなる。<br>\n≡ はローカルブランチとリモートブランチが同一であることを表している。\n<img src=\"git_status_display_04.png\" alt=\"git_status_display_04.png -reverse\"></p>\n<p>ローカルブランチで新しくコミットがあると、↑+数字で何コミット進んでいるかが表示される。\n<img src=\"git_status_display_05.png\" alt=\"git_status_display_05.png\"></p>\n<h2>トラブルシュート:追加したファイル数と posh-git の表示数が合わない、足りない</h2>\n<h3>対処法</h3>\n<p>正しい表示なので問題ない。</p>\n<h3>解説</h3>\n<p><code>posh-git</code>の表示はおそらく、<code>git status</code>の結果を表示している。そのため、複数ファイルを追加していてもそれらが同一のディレクトリに追加されている場合、<code>git add</code>するのはそのディレクトリ 1 つで済む。まずは<code>git status</code>の出力と表示数を見比べてみよう。</p>","fields":{"slug":"/posh-git-settings/"},"frontmatter":{"title":"gitのブランチ名をPowerShellで表示する","created":"2021-02-05T18:36","updated":"2021-02-15T18:06","description":"posh-gitを使ってPowerShellでブランチ名を表示する操作の備忘録","tag":["git","github","powershell","windows"],"author":["nozzle"],"category":"tech"}},"previous":{"fields":{"slug":"/blog-service-impression/"},"frontmatter":{"title":"ブログサービス所感"}},"next":{"fields":{"slug":"/trouble-shooting-EPERM-npm-install/"},"frontmatter":{"title":"トラブルシュート：npm installすると、\"Error EPERM operation not permitted, unlink ...\"が出る"}},"relatedPosts":{"totalCount":7,"edges":[{"node":{"fields":{"slug":"/self-access-restriction/"},"frontmatter":{"title":"hostsを弄らせて欲を断つ"}}},{"node":{"fields":{"slug":"/gitalk-latest-display/"},"frontmatter":{"title":"gitalkの最新コメントをgatsbyに表示する"}}},{"node":{"fields":{"slug":"/gitclone-to-mygithub/"},"frontmatter":{"title":"gitで別のリポジトリからファイルをコピーする"}}},{"node":{"fields":{"slug":"/gatsby-gitalk/"},"frontmatter":{"title":"GitalkでGatsbyにコメント欄を導入"}}},{"node":{"fields":{"slug":"/posh-git-settings/"},"frontmatter":{"title":"gitのブランチ名をPowerShellで表示する"}}},{"node":{"fields":{"slug":"/gatsby-environment-settings/"},"frontmatter":{"title":"gatsby環境設定"}}},{"node":{"fields":{"slug":"/git-memorandum/"},"frontmatter":{"title":"git備忘録"}}}]}},"pageContext":{"id":"ba3b0a67-1732-5227-a2ad-6988a350c5fc","previousPostId":"30516e87-e308-5a4e-a9c0-764e3401eb43","nextPostId":"ecb60544-7c28-54bf-8a2f-3a069c30e66c","category":"tech","tagList":["git","github","powershell","windows"]}},"staticQueryHashes":["3284037645","500847697"]}