{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/wordpress-setting/",
    "result": {"data":{"site":{"siteMetadata":{"title":"NARAZUKE","author":[{"name":"nozzle","summary":"who lives in gummaken.","social":{"github":"nozzlex3"}},{"name":"konnyaku","summary":"who is known as Siege Sukosuko Samurai.","social":{"github":"wabetarou"}}]}},"markdownRemark":{"id":"eb0018a5-854f-5c46-9ed4-b289d8b4f3a5","excerpt":"wordpress を動かす環境構築 ってやって出てきた説明をコピペしただけです。詳しいことは僕が詳しくなったら分かるんじゃない。 mysql で wordpress の database を作る  ここからは mysql 上の処理になる。最後のセミコロンを忘れずに。 localhost はそのままで、username…","html":"<h2>wordpress を動かす環境構築</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt -y install apache2 php php-mysql php-curl php-gd php-xml mysql-server</code></pre></div>\n<figure class=\"wp-block-table\"><table class=\"\"><tbody><tr><td>apache2</td><td>webサーバ</td></tr><tr><td>php</td><td>webサーバで動くスクリプト言語、wordpressはこれで作ってるらしい</td></tr><tr><td>php-mysql</td><td>PHP用のMySQL module</td></tr><tr><td>php-curl</td><td>PHP用のCURL module</td></tr><tr><td>php-gd</td><td>PHP用のGD module</td></tr><tr><td>php-xml</td><td>PHP用のDOM, Simple XML, WDDX, XML, XSL module</td></tr><tr><td>mysql-server</td><td>mysqlのサーバ</td></tr><tr><td>???</td><td>あとなんか入れた気がする......</td></tr></tbody></table></figure>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo dpkg -l | grep php</code></pre></div>\n<p>ってやって出てきた説明をコピペしただけです。詳しいことは僕が詳しくなったら分かるんじゃない。</p>\n<h2>mysql で wordpress の database を作る</h2>\n<p><code class=\"language-text\">sudo mysql # mysqlの起動</code></p>\n<p>ここからは mysql 上の処理になる。最後のセミコロンを忘れずに。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">CREATE DATABASE wordpress;\nGRANT ALL PRIVILEGES ON wordpress.* TO 'username'@'localhost' IDENTIFIED BY 'password';\nexit;</code></pre></div>\n<p>localhost はそのままで、username と password は自分の好きなものを登録しよう。これはデータベースのユーザで wordpress のユーザとは別。</p>\n<p>参考：<a href=\"https://qiita.com/ritukiii/items/afdc91e68d0cf3e0f383\">Mysql 関係の備忘録</a></p>\n<h2>wordpress のインストール</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">wget https://ja.wordpress.org.latest-ja.tar.gz\ntar xvf latest-ja.tar.gz\nsudo mv wordpress /var/www/html/\nsudo chown -R www-data:www-data /var/www/html/wordpress/</code></pre></div>\n<p>mv は cp とかと違って -r とかつけなくてもディレクトリを移動できる。chown の -R は大文字。</p>\n<p>tar のコマンドってなんか左下周辺のキーを 3-4 つ押すって覚えてる。そんなことでいいのか？</p>\n<p>参考：<a href=\"https://qiita.com/astro_super_nova/items/e7ff4ef5ec9fa253fd61\">tar のオプションをまとめる</a></p>\n<p>x!v!f! 展開！一覧表示！ファイル名指定！</p>\n<h2>wordpress に静的 URL でアクセス可能にする</h2>\n<h3>wordpress.conf の生成</h3>\n<p><a href=\"https://oxynotes.com/?p=7392\">Apache の mod_rewrite モジュールの使い方を徹底的に解説</a></p>\n<p>ページにすっきりした URL を使えるようにする。上のサイトが分かりやすかった。このサイト自身のページが?p=7392 みたいな URL になっているのが気になる。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo vim /etc/apache2/conf-available/wordpress.conf</code></pre></div>\n<p>wordpress.conf の中身は下のようにしよう。</p>\n<div class=\"gatsby-code-title\">/etc/apache2/conf-available/wordpress.conf</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>Directory /var/www/html/wordpress<span class=\"token operator\">></span>\n    AllowOverride All\n<span class=\"token operator\">&lt;</span>/Directory<span class=\"token operator\">></span></code></pre></div>\n<h3>conf の有効化</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo a2enconf wordpress\nsudo a2enmod rewrite\nsudo systemctl restart apache2</code></pre></div>\n<p>参考：<a href=\"https://qiita.com/diconran/items/1eca0e0792f4ce1930c5\">Ubuntu の Apache 設定ファイル、どうやるんだっけ？</a></p>\n<p><code class=\"language-text\">/etc/apache2/conf-available/wordpress.conf</code>へのシンボリックリンクを<code class=\"language-text\">/etc/apache2/conf-enabled</code>に作成。</p>\n<p><code class=\"language-text\">/etc/apache2/mods-available/rewrite.load</code>へのシンボリックリンクを<code class=\"language-text\">/etc/apache2/mods-enabled</code>に作成。</p>\n<p>そして再起動。</p>\n<h2>ブラウザ操作</h2>\n<p>ブラウザの URL に ifconfig で出てきたプライベートアドレスを打って最後に”/wordpress/“をつけてアクセスする。</p>\n<p>e.g. <a href=\"http://192.168.1.XXX/wordpress/\">http://192.168.1.XXX/wordpress/</a></p>\n<p>データベースに接続するための情報を入力。mysql の操作で作成したユーザ名とパスワードだけ入力、他の欄は変えない。</p>\n<p>接続が済んだらブログ名とか wordress のユーザ名とかの項目の内容を入力する。これらは後に変更が可能。</p>\n<h2>最大アップロードサイズを変更</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo vim /etc/php/7.0/apache2/php.ini</code></pre></div>\n<div class=\"gatsby-code-title\">/etc/php/7.0/apache2.php.ini</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">upload_max_size <span class=\"token operator\">=</span>2M  →  <span class=\"token assign-left variable\">upload_max_size</span><span class=\"token operator\">=</span>10M\n<span class=\"token assign-left variable\">post_max_size</span><span class=\"token operator\">=</span>8M  → <span class=\"token assign-left variable\">post_max_size</span><span class=\"token operator\">=</span>10M\nmemory_limit <span class=\"token operator\">=</span>128M → <span class=\"token assign-left variable\">memory_limit</span><span class=\"token operator\">=</span>512M</code></pre></div>\n<p>この方法で php インストールすると PHP の 7.0 になってしまうことに気づきました。良くない。raspbian だと add-apt-repository が使えないらしく ppa の公開鍵を/etc/apt/sources.list.d に登録しなきゃいけないらしい。</p>\n<p>参考：<a href=\"https://qiita.com/hnw/items/734f82bee26a40269c1b\">Raspbian に Ubuntu 用の PPA を追加する</a></p>\n<h2>まとめ</h2>\n<p>docker でババッとやるのが楽かもしれない。でも docker の使い方わからないし、こういう地道な作業も勉強になるので勘弁してほしい。</p>\n<p>(Reposted from nozzlog, Written on 2020-02-26)</p>","fields":{"slug":"/wordpress-setting/"},"frontmatter":{"title":"WordPress設定備忘録","created":"2021-03-18T12:09","updated":"2021-03-18T18:33","description":"このサイトはWordPressではないです","tag":["raspberrypi","linux"],"author":["nozzle"],"category":"tech"}},"previous":{"fields":{"slug":"/raspberrypi-ssd-boot/"},"frontmatter":{"title":"SDカードなしでRaspberry Pi 4B を SSDでUSB bootする"}},"next":{"fields":{"slug":"/ssh-key-transfer/"},"frontmatter":{"title":"sshの鍵を一発で送る方法"}},"relatedPosts":{"totalCount":9,"edges":[{"node":{"fields":{"slug":"/trouble-shooting-moduleerror-ndef/"},"frontmatter":{"title":"nfcpyの実験中\"ModuleNotFoundError No module named 'ndef'が出た"}}},{"node":{"fields":{"slug":"/raspberrypi-setting-memo/"},"frontmatter":{"title":"ラズパイ環境設定メモ"}}},{"node":{"fields":{"slug":"/story-a-stupid-king/"},"frontmatter":{"title":"【童話】まぬけな王様"}}},{"node":{"fields":{"slug":"/wordpress-setting/"},"frontmatter":{"title":"WordPress設定備忘録"}}},{"node":{"fields":{"slug":"/raspberrypi-static-ipaddress/"},"frontmatter":{"title":"ラズパイのIPアドレスを固定する方法"}}},{"node":{"fields":{"slug":"/raspberrypi-ssd-boot/"},"frontmatter":{"title":"SDカードなしでRaspberry Pi 4B を SSDでUSB bootする"}}},{"node":{"fields":{"slug":"/raspberrypi-google-drive/"},"frontmatter":{"title":"ラズパイでGoogle Driveを使う"}}},{"node":{"fields":{"slug":"/linux-command-filesystem/"},"frontmatter":{"title":"Linuxのファイルシステムコマンドまとめ"}}},{"node":{"fields":{"slug":"/pyenv-venv-virtual-environment/"},"frontmatter":{"title":"pyenvとvenvで仮想環境構築 ラズパイ編"}}}]}},"pageContext":{"id":"eb0018a5-854f-5c46-9ed4-b289d8b4f3a5","previousPostId":"b7545dcb-cdcd-546a-b8b7-1e91ebf095fe","nextPostId":"16235b44-f160-55fe-98f4-8c64bda055e5","category":"tech","tagList":["raspberrypi","linux"]}},
    "staticQueryHashes": ["3284037645","500847697"]}