{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["AboutPage","data","location","siteTitle","site","siteMetadata","title","Layout","header","children","isRootPath","pathname","className","to","data-is-root-path","SEO","description","lang","meta","useStaticQuery","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"mappings":"6FAAA,wDAiBeA,UAXG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MAEzC,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,UACX,+B,kCCZN,qCAqCeC,IAlCA,SAAC,GAAmC,IAG7CC,EAHYN,EAAgC,EAAhCA,SAAUI,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SAE3BC,EADQ,MACKR,EAASS,SAiB5B,OAbEH,EADEE,EAEA,wBAAIE,UAAU,gBACZ,kBAAC,IAAD,CAAMC,GAAG,KAAKP,IAKhB,kBAAC,IAAD,CAAMM,UAAU,mBAAmBC,GAAG,KACnCP,GAML,yBAAKM,UAAU,iBAAiBE,oBAAmBJ,GACjD,4BAAQE,UAAU,iBAAiBJ,GACnC,8BAAOC,GACP,4BAAQG,UAAU,iBAAlB,YACYN,EACV,yBAAKM,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,mBAAT,uB,kCC9BV,iDAYME,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMZ,EAAY,EAAZA,MAC9BF,EAASe,YAAe,aAAxBf,KAoBFgB,EAAkBJ,GAAeZ,EAAKC,aAAaW,YACnDK,EAAY,UAAGjB,EAAKC,oBAAR,aAAG,EAAmBC,MAExC,OACE,kBAAC,iBAAD,KACE,kBAAC,SAAD,CACEgB,eAAgB,CACdL,QAEFX,MAAOA,EACPiB,cAAeF,EAAY,QAAWA,EAAiB,KACvDH,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASnB,GAEX,CACEoB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAArB,EAAKC,oBAAL,mBAAmBsB,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAK,gBACLC,QAASnB,GAEX,CACEkB,KAAK,sBACLC,QAASL,IAEXS,OAAOX,OAMjBH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-about-js-8d4802b441c62b5d8232.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst AboutPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"about\" />\n      <p></p>\n    </Layout>\n  )\n}\n\nexport default AboutPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer className=\"global-footer\">\n        (c) 2021 {title}\n        <div className=\"footer-info\">\n          <Link to=\"/about\">about</Link>\n          <Link to=\"/privacy-policy\">privacy policy</Link>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet, HelmetProvider } from \"react-helmet-async\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              name\n              summary\n              social {\n                github\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <HelmetProvider>\n      <Helmet\n        htmlAttributes={{\n          lang,\n        }}\n        title={title}\n        titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n        meta={[\n          {\n            name: `description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: site.siteMetadata?.social?.twitter || ``,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: metaDescription,\n          },\n        ].concat(meta)}\n        />\n      </HelmetProvider>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}