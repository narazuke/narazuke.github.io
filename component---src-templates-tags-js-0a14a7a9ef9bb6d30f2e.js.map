{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/post-column.js"],"names":["Tags","pageContext","data","location","siteTitle","site","siteMetadata","title","tag","allMarkdownRemark","edges","tagHeader","totalCount","style","listStyle","map","node","to","PostColumnTemplate","className","key","fields","slug","itemScope","itemType","frontmatter","category","itemProp","created","dangerouslySetInnerHTML","__html","description","excerpt","author","name","filename","borderRadius","fixed"],"mappings":"4FAAA,oEAqDeA,UA5CF,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3BC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAQP,EAARO,IAFwC,EAGlBN,EAAKO,kBAA3BC,EAHwC,EAGxCA,MAIFC,EAAS,IAAOH,EAAP,OAPiC,EAGjCI,WAIA,IACf,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUI,MAAOH,GACjC,4BAAKO,GACL,wBAAIE,MAAO,CAAEC,UAAU,SACpBJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OAAO,kBAAC,IAAD,CAAYA,KAAMA,QAG7B,kBAAC,IAAD,CAAMC,GAAG,SAAT,e,kCCzBN,iDAqEeC,IAjEY,SAAC,GAAc,IAAD,IAAXF,EAAW,EAAXA,KAC5B,OACE,wBAAIG,UAAU,YAAYC,IAAKJ,EAAKK,OAAOC,MACzC,6BACEH,UAAU,iBACVI,WAAS,EACTC,SAAS,6BAET,gCACE,+BACE,yBAAKL,UAAS,YAAcH,EAAKS,YAAYC,UAC3C,kBAAC,IAAD,CAAMT,GAAE,aAAeD,EAAKS,YAAYC,SAAhC,KACLV,EAAKS,YAAYC,YAIxB,4BACE,kBAAC,IAAD,CAAMT,GAAID,EAAKK,OAAOC,KAAMK,SAAS,OACnC,0BAAMA,SAAS,YAAYX,EAAKS,YAAYlB,SAGhD,+BAAQS,EAAKS,YAAYG,SACzB,yBAAKT,UAAU,YAAf,UACGH,EAAKS,YAAYjB,WADpB,aACG,EAAsBO,KAAI,SAAAP,GACzB,OACE,2BAAOY,IAAK,aACV,yBAAKD,UAAU,OACb,kBAAC,IAAD,CAAMF,GAAE,QAAUT,EAAV,KAAmBA,UAOvC,iCACE,uBACEqB,wBAAyB,CACvBC,OAAQd,EAAKS,YAAYM,aAAef,EAAKgB,SAE/CL,SAAS,iBApCf,UAuCGX,EAAKS,YAAYQ,cAvCpB,aAuCG,EAAyBlB,KAAI,SAAAmB,GAC5B,OACE,2BAAOd,IAAK,eACV,kBAAC,IAAD,CAAMH,GAAE,WAAaiB,EAAb,IAAsBf,UAAU,gBACtC,gCACE,kBAAC,IAAD,CACEgB,SAAU,eAAiBD,EAAO,OAClCrB,MAAO,CACLuB,aAAa,OAEfC,OAAO,KAGX,6BAAMH,SAMhB","file":"component---src-templates-tags-js-0a14a7a9ef9bb6d30f2e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport PostColumn from \"../components/post-column\"\n\nconst Tags = ({ pageContext, data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  // const tagHeader = `${totalCount} post${\n  //   totalCount === 1 ? \"\" : \"s\"\n  // } tagged with \"${tag}\"`\n  const tagHeader = `\"${tag}\" : ${totalCount}ä»¶`\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h2>{tagHeader}</h2>\n      <ol style={{ listStyle: `none` }}>\n        {edges.map(({ node }) => {\n          return <PostColumn node={node} />\n        })}\n      </ol>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          summary\n          social {\n            github\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___created], order: DESC }\n      filter: { frontmatter: { tag: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            created(formatString: \"Y-M-D ddd\")\n            tag\n            author\n            category\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"./image\"\n\nconst PostColumnTemplate = ({ node }) => {\n  return (\n    <li className=\"post-list\" key={node.fields.slug}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <small>\n            <div className={`category ${node.frontmatter.category}`}>\n              <Link to={`/category/${node.frontmatter.category}/`}>\n                {node.frontmatter.category}\n              </Link>\n            </div>\n          </small>\n          <h2>\n            <Link to={node.fields.slug} itemProp=\"url\">\n              <span itemProp=\"headline\">{node.frontmatter.title}</span>\n            </Link>\n          </h2>\n          <small>{node.frontmatter.created}</small>\n          <div className=\"tag-list\">\n            {node.frontmatter.tag?.map(tag => {\n              return (\n                <small key={\"post-list\"}>\n                  <div className=\"tag\">\n                    <Link to={`/tag/${tag}/`}>{tag}</Link>\n                  </div>\n                </small>\n              )\n            })}\n          </div>\n        </header>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: node.frontmatter.description || node.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n        {node.frontmatter.author?.map(name => {\n          return (\n            <small key={\"author-list\"}>\n              <Link to={`/author/${name}/`} className=\"profile-mini\">\n                <figure>\n                  <Image\n                    filename={\"profile-pic-\" + name + \".jpg\"}\n                    style={{\n                      borderRadius: `50%`,\n                    }}\n                    fixed={true}\n                  />\n                </figure>\n                <div>{name}</div>\n              </Link>\n            </small>\n          )\n        })}\n      </article>\n      <hr />\n    </li>\n  )\n}\nexport default PostColumnTemplate\n"],"sourceRoot":""}